{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\components\\\\ColorTheme\\\\ColorTheme.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColoreTheme = () => {\n  _s();\n\n  let [checked, setChecked] = useState(true);\n\n  let handleSwitchCheck = e => {\n    setChecked(!e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: handleSwitchCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }, this),\n    label: checked ? \"Light theme\" : \"Dark Theme\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ColoreTheme, \"aryUgSk0mPG99WIkJyykUON3SzE=\");\n\n_c = ColoreTheme;\nexport default ColoreTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColoreTheme\");","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/components/ColorTheme/ColorTheme.jsx"],"names":["React","Switch","FormControlLabel","ColoreTheme","checked","setChecked","useState","handleSwitchCheck","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAApC;;AACA,MAAIC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BH,IAAAA,UAAU,CAAC,CAACG,CAAC,CAACC,MAAF,CAASL,OAAX,CAAV;AACC,GAFD;;AAGA,sBACI,QAAC,gBAAD;AACA,IAAA,OAAO,eAAE,QAAC,MAAD;AACT,MAAA,QAAQ,EAAEG;AADD;AAAA;AAAA;AAAA;AAAA,YADT;AAIA,IAAA,KAAK,EAAEH,OAAO,GAAG,aAAH,GAAmB;AAJjC;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAbD;;GAAMD,W;;KAAAA,W;AAeN,eAAeA,WAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n\r\nconst ColoreTheme = () => {\r\n\r\n    let [checked, setChecked] = useState(true);\r\n    let handleSwitchCheck = (e) => {\r\n    setChecked(!e.target.checked)\r\n    }\r\n    return (\r\n        <FormControlLabel \r\n        control={<Switch\r\n        onChange={handleSwitchCheck}\r\n                                    />} \r\n        label={checked ? \"Light theme\" : \"Dark Theme\" }/>\r\n    )\r\n}\r\n\r\nexport default ColoreTheme;"]},"metadata":{},"sourceType":"module"}