{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\components\\\\ItemAdder\\\\ItemAdder.js\",\n    _s = $RefreshSig$();\n\nimport '../ItemAdder/ItemAdder.css';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setFormVisible, addTodo } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemAdder = _ref => {\n  _s();\n\n  let {\n    visible,\n    setFormVisible,\n    addItem\n  } = _ref;\n  let [value, setValue] = useState(\"\");\n\n  const onInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    let wrapper = document.querySelector('.addNewItem-wrapper');\n    let inp = document.querySelector('.inputItemAdder');\n    let clicked = false;\n    document.querySelector('.btnAddNewItem').addEventListener('click', () => {\n      clicked = !clicked;\n      wrapper.classList.add('animate-wrapper');\n      setTimeout(() => {\n        inp.classList.add('left');\n        inp.focus();\n      }, 500);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addNewItem-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formAdd\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputItemAdder\",\n        type: \"text\",\n        value: value,\n        placeholder: \"Add ToDo item here\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: !visible ? setFormVisible : () => store.dispatch(addTodo(value)),\n        className: \"btnAddNewItem\",\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ItemAdder, \"8/j/U2Dmu444I+OEOdr+aVI5ADc=\");\n\n_c = ItemAdder;\n\nconst mapStateToProps = state => {\n  return {\n    visible: state.setVisible\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFormVisible: () => dispatch(setFormVisible())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemAdder);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemAdder\");","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/components/ItemAdder/ItemAdder.js"],"names":["useEffect","useState","connect","setFormVisible","addTodo","ItemAdder","visible","addItem","value","setValue","onInputChange","event","target","onSubmit","e","preventDefault","wrapper","document","querySelector","inp","clicked","addEventListener","classList","add","setTimeout","focus","store","dispatch","mapStateToProps","state","setVisible","mapDispatchToProps"],"mappings":";;;AACA,OAAO,4BAAP;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,OAAxB,QAAsC,YAAtC;;;AAEA,MAAMC,SAAS,GAAG,QAAwC;AAAA;;AAAA,MAAvC;AAACC,IAAAA,OAAD;AAAUH,IAAAA,cAAV;AAA0BI,IAAAA;AAA1B,GAAuC;AACxD,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAd;AACA,QAAIC,GAAG,GAAGF,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAV;AACA,QAAIE,OAAO,GAAG,KAAd;AAEAH,IAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCG,gBAAzC,CAA0D,OAA1D,EAAmE,MAAM;AAEzED,MAAAA,OAAO,GAAG,CAACA,OAAX;AAEAJ,MAAAA,OAAO,CAACM,SAAR,CAAkBC,GAAlB,CAAsB,iBAAtB;AACAC,MAAAA,UAAU,CAAC,MAAI;AACbL,QAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,MAAlB;AACFJ,QAAAA,GAAG,CAACM,KAAJ;AAAa,OAFH,EAEI,GAFJ,CAAV;AAKH,KAVG;AAWD,GAhBQ,CAAT;AAkBF,sBAEE;AAAK,IAAA,SAAS,EAAG,oBAAjB;AAAA,2BACG;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEZ,QAApC;AAAA,8BACD;AACY,QAAA,SAAS,EAAC,gBADtB;AAEY,QAAA,IAAI,EAAC,MAFjB;AAGY,QAAA,KAAK,EAAEL,KAHnB;AAIY,QAAA,WAAW,EAAC,oBAJxB;AAKY,QAAA,QAAQ,EAAEE;AALtB;AAAA;AAAA;AAAA;AAAA,cADC,eAOH;AACC,QAAA,OAAO,EAAI,CAACJ,OAAD,GAAWH,cAAX,GAA4B,MAAMuB,KAAK,CAACC,QAAN,CAAevB,OAAO,CAACI,KAAD,CAAtB,CAD9C;AAEC,QAAA,SAAS,EAAG,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UAFF;AAmBC,CAhDD;;GAAMH,S;;KAAAA,S;;AAkDN,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHvB,IAAAA,OAAO,EAAEuB,KAAK,CAACC;AADZ,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIJ,QAAD,IAAc;AACvC,SAAO;AACLxB,IAAAA,cAAc,EAAE,MAAMwB,QAAQ,CAACxB,cAAc,EAAf;AADzB,GAAP;AAID,CALD;;AAOA,eAAeD,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,SAA7C,CAAf","sourcesContent":["\r\nimport '../ItemAdder/ItemAdder.css'\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setFormVisible, addTodo} from '../actions'\r\n\r\nconst ItemAdder = ({visible, setFormVisible, addItem}) => {\r\n  let [value, setValue] = useState(\"\");\r\n\r\n  const onInputChange = (event) => {\r\n      setValue(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let wrapper = document.querySelector('.addNewItem-wrapper');\r\n    let inp = document.querySelector('.inputItemAdder');\r\n    let clicked = false;\r\n\r\n    document.querySelector('.btnAddNewItem').addEventListener('click', () => {\r\n\r\n    clicked = !clicked\r\n    \r\n    wrapper.classList.add('animate-wrapper');\r\n    setTimeout(()=>{\r\n      inp.classList.add('left');\r\n    inp.focus();},500)\r\n    \r\n\r\n})\r\n  })\r\n\r\nreturn (\r\n  \r\n  <div className = 'addNewItem-wrapper'>\r\n     <form className=\"formAdd\" onSubmit={onSubmit}>\r\n    <input\r\n                className=\"inputItemAdder\"\r\n                type=\"text\"\r\n                value={value}\r\n                placeholder=\"Add ToDo item here\"\r\n                onChange={onInputChange}/>\r\n  <button\r\n   onClick = {!visible ? setFormVisible : () => store.dispatch(addTodo(value))}\r\n   className = 'btnAddNewItem'\r\n   >Add New Item</button>\r\n   </form>\r\n   </div> \r\n  \r\n)\r\n  \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      visible: state.setVisible\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFormVisible: () => dispatch(setFormVisible()),\r\n  \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemAdder);\r\n\r\n"]},"metadata":{},"sourceType":"module"}