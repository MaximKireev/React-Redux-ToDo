{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\components\\\\ToDoList\\\\ToDoList.js\";\nimport ToDoItem from \"../ToDoItem/ToDoItem\";\nimport { connect } from \"react-redux\";\nimport { React, Component } from \"react\";\nimport '../ToDoList/ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodosList extends Component {\n  render() {\n    const {\n      todos\n    } = this.props.data;\n    const {\n      filterType\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listOfTodos\",\n      children: todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No items to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this) : filterType !== 'All' ? filterItems(todos, filterType).map((item, idx) => /*#__PURE__*/_jsxDEV(ToDoItem, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 70\n      }, this)) : todos.map((item, idx) => /*#__PURE__*/_jsxDEV(ToDoItem, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nconst filterItems = (todos, filter) => {\n  switch (filter) {\n    case 'All':\n      return todos;\n\n    case 'Done':\n      return todos.filter(item => item.done);\n\n    case 'Important':\n      return todos.filter(item => item.important);\n\n    default:\n      return todos;\n  }\n};\n\nexport default connect(mapStateToProps)(TodosList);","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/components/ToDoList/ToDoList.js"],"names":["ToDoItem","connect","React","Component","TodosList","render","todos","props","data","filterType","length","filterItems","map","item","idx","mapStateToProps","state","filter","done","important"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0BAAP;;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAL,CAAWC,IAA7B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKF,KAAL,CAAWC,IAAjC;AAGA,wBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACKF,KAAK,CAACI,MAAN,KAAiB,CAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAGGD,UAAU,KAAK,KAAf,GACDE,WAAW,CAACL,KAAD,EAAQG,UAAR,CAAX,CAA+BG,GAA/B,CAAmC,CAACC,IAAD,EAAOC,GAAP,kBAAe,QAAC,QAAD;AAAoB,QAAA,IAAI,EAAED;AAA1B,SAAeC,GAAf;AAAA;AAAA;AAAA;AAAA,cAAlD,CADC,GAEAR,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAAe,QAAC,QAAD;AAAoB,QAAA,IAAI,EAAED;AAA1B,SAAeC,GAAf;AAAA;AAAA;AAAA;AAAA,cAAzB;AANR;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAjB6B;;AAoBlC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEQ;AADH,GAAP;AAGH,CAJD;;AAKA,MAAML,WAAW,GAAG,CAACL,KAAD,EAAQW,MAAR,KAAmB;AAEvC,UAAOA,MAAP;AACI,SAAK,KAAL;AACI,aAAOX,KAAP;;AACJ,SAAK,MAAL;AACI,aAAOA,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,IAA1B,CAAP;;AACJ,SAAK,WAAL;AACI,aAAOZ,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACM,SAA1B,CAAP;;AACJ;AACI,aAAOb,KAAP;AARR;AAUC,CAZD;;AAaA,eAAeL,OAAO,CAACc,eAAD,CAAP,CAAyBX,SAAzB,CAAf","sourcesContent":["import ToDoItem from \"../ToDoItem/ToDoItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { React, Component } from \"react\";\r\nimport '../ToDoList/ToDoList.css'\r\n\r\nclass TodosList extends Component {\r\n    render() {\r\n        const { todos } = this.props.data;\r\n        const {filterType } = this.props.data;\r\n\r\n        \r\n        return (\r\n            <ul className=\"listOfTodos\">\r\n                {todos.length === 0 ? (\r\n                    <h2>No items to do</h2>\r\n                ) : (\r\n                    filterType !== 'All'?\r\n                   filterItems(todos, filterType).map((item, idx) => <ToDoItem key={idx} item={item} />):\r\n                    todos.map((item, idx) => <ToDoItem key={idx} item={item} />)\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    };\r\n};\r\nconst filterItems = (todos, filter) => {\r\n\r\nswitch(filter){\r\n    case 'All':\r\n        return todos;\r\n    case 'Done':\r\n        return todos.filter(item => item.done);\r\n    case 'Important':\r\n        return todos.filter(item => item.important);\r\n    default:\r\n        return todos;\r\n}\r\n}\r\nexport default connect(mapStateToProps)(TodosList);\r\n"]},"metadata":{},"sourceType":"module"}