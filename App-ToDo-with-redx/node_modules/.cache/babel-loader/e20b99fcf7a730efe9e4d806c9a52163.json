{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\components\\\\ToDoItem\\\\ToDoItem.js\";\nimport * as actions from \"../actions\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { Button } from \"@mui/material\";\nimport { ButtonGroup } from \"@mui/material\";\nimport '../ToDoItem/ToDoItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDoItem = _ref => {\n  let {\n    item,\n    markDone,\n    remTodo,\n    markImp\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: item.done ? \"todo-item done\" : item.important ? \"todo-item important\" : \"todo-item\",\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      size: \"small\",\n      \"aria-label\": \"small button group\",\n      className: \"control-btns\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => markDone(item.id),\n        children: item.done ? \"Undo\" : \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => remTodo(item.id),\n        children: \"Del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => markImp(item.id),\n        children: \"!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ToDoItem;\n\nconst mapStateToProps = state => {\n  return {\n    items: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/components/ToDoItem/ToDoItem.js"],"names":["actions","connect","bindActionCreators","Button","ButtonGroup","ToDoItem","item","markDone","remTodo","markImp","done","important","title","id","mapStateToProps","state","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,0BAAP;;;;AAGA,MAAMC,QAAQ,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAAyC;AACvD,sBACI;AAAA,4BACA;AACI,MAAA,SAAS,EACLH,IAAI,CAACI,IAAL,GACM,gBADN,GAEMJ,IAAI,CAACK,SAAL,GACA,qBADA,GAEA,WANd;AAAA,gBAUKL,IAAI,CAACM;AAVV,OAQSN,IAAI,CAACO,EARd;AAAA;AAAA;AAAA;AAAA,YADA,eAgBK,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,oBAAW,oBAArC;AAA0D,MAAA,SAAS,EAAC,cAApE;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AACA,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAACD,IAAI,CAACO,EAAN,CADvB;AAAA,kBACmCP,IAAI,CAACI,IAAL,GAAY,MAAZ,GAAqB;AADxD;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AACA,QAAA,OAAO,EAAE,MAAMF,OAAO,CAACF,IAAI,CAACO,EAAN,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AACA,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAACH,IAAI,CAACO,EAAN,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBL;AAAA,kBADJ;AA2BH,CA5BD;;KAAMR,Q;;AA6BN,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED;AADJ,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAOhB,kBAAkB,CAACF,OAAD,EAAUkB,QAAV,CAAzB;AACH,CAFD;;AAIA,eAAejB,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import * as actions from \"../actions\";\r\nimport {connect} from 'react-redux'\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { ButtonGroup } from \"@mui/material\";\r\nimport '../ToDoItem/ToDoItem.css'\r\n\r\n\r\nconst ToDoItem = ({ item, markDone, remTodo, markImp }) => {\r\n    return (\r\n        <>\r\n        <li\r\n            className={\r\n                item.done\r\n                    ? \"todo-item done\"\r\n                    : item.important\r\n                    ? \"todo-item important\"\r\n                    : \"todo-item\"\r\n            }\r\n            key={item.id}\r\n        >\r\n            {item.title}\r\n\r\n       \r\n           \r\n        </li>\r\n             <ButtonGroup size=\"small\" aria-label=\"small button group\" className=\"control-btns\">\r\n             <Button variant=\"outlined\"\r\n             onClick={() => markDone(item.id)}>{item.done ? \"Undo\" : \"Done\"}</Button>\r\n             <Button variant=\"outlined\"\r\n             onClick={() => remTodo(item.id)}>Del</Button>\r\n             <Button variant=\"outlined\"\r\n             onClick={() => markImp(item.id)}>!!!</Button>\r\n             </ButtonGroup>\r\n             </>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(actions, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoItem);\r\n"]},"metadata":{},"sourceType":"module"}