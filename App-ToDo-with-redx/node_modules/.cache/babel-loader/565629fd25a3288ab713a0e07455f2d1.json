{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\index.js\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './components/store';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport App from './components/App/App';\nimport { ThemesContext, themes } from \"../src/components/context\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById(\"root\");\nlet [checked, setChecked] = useState(true);\nlet theme = useContext(ThemesContext);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this),\n    label: checked ? \"Light theme\" : \"Dark Theme\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ThemesContext.Provider, {\n    value: themes,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this), rootElement);","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/index.js"],"names":["ReactDOM","Provider","store","Switch","FormControlLabel","App","ThemesContext","themes","useContext","useState","rootElement","document","getElementById","checked","setChecked","theme","render"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,2BAAtC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAApC;AACA,IAAIM,KAAK,GAAGP,UAAU,CAACF,aAAD,CAAtB;AACAN,QAAQ,CAACgB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA,0BACE,QAAC,gBAAD;AACA,IAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADT;AAGA,IAAA,KAAK,EAAEW,OAAO,GAAG,aAAH,GAAmB;AAHjC;AAAA;AAAA;AAAA;AAAA,UADF,eAME,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAIN,MAAjC;AAAA,2BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWEG,WAXF","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './components/store'\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport App from './components/App/App'\r\nimport { ThemesContext, themes } from \"../src/components/context\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nlet [checked, setChecked] = useState(true)\r\nlet theme = useContext(ThemesContext)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <FormControlLabel \r\n    control={<Switch\r\n      />} \r\n    label={checked ? \"Light theme\" : \"Dark Theme\" } \r\n     />\r\n    <ThemesContext.Provider value = {themes}>\r\n    <App />\r\n    </ThemesContext.Provider>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"]},"metadata":{},"sourceType":"module"}