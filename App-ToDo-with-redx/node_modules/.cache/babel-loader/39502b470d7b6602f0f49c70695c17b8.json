{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaximKireev\\\\Desktop\\\\Project\\\\React practice\\\\App-ToDo-with-redx\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport ItemAdder from \"../ItemAdder/ItemAdder\";\nimport Header from \"../Header/Header\";\nimport TodosList from '../ToDoList/ToDoList';\nimport '../App/App.css';\nimport { ThemesContext } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let theme = useContext(ThemesContext);\n  let [checked, setChecked] = useState(true);\n\n  let handleSwitchCheck = e => {\n    setChecked(!e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: checked ? theme.light.AppComponentTheme : theme.dark.AppComponentTheme,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: handleSwitchCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this),\n      label: checked ? \"Light theme\" : \"Dark Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemAdder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"nTlc+Y19hqsrpAx/xZ6fOmh/dis=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MaximKireev/Desktop/Project/React practice/App-ToDo-with-redx/src/components/App/App.js"],"names":["ItemAdder","Header","TodosList","ThemesContext","App","theme","useContext","checked","setChecked","useState","handleSwitchCheck","e","target","light","AppComponentTheme","dark"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,YAA9B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,MAAIC,KAAK,GAAGC,UAAU,CAACH,aAAD,CAAtB;AAGA,MAAI,CAACI,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAApC;;AACA,MAAIC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BH,IAAAA,UAAU,CAAC,CAACG,CAAC,CAACC,MAAF,CAASL,OAAX,CAAV;AACC,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AACA,IAAA,KAAK,EAAIA,OAAO,GAAGF,KAAK,CAACQ,KAAN,CAAYC,iBAAf,GAAmCT,KAAK,CAACU,IAAN,CAAWD,iBAD9D;AAAA,4BAEM,QAAC,gBAAD;AACN,MAAA,OAAO,eAAE,QAAC,MAAD;AACT,QAAA,QAAQ,EAAEJ;AADD;AAAA;AAAA;AAAA;AAAA,cADH;AAIN,MAAA,KAAK,EAAEH,OAAO,GAAG,aAAH,GAAmB;AAJ3B;AAAA;AAAA;AAAA;AAAA,YAFN,eAQI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAxBD;;GAAMH,G;;KAAAA,G;AA4BN,eAAeA,GAAf","sourcesContent":["import ItemAdder from \"../ItemAdder/ItemAdder\";\r\nimport Header from \"../Header/Header\";\r\nimport TodosList from '../ToDoList/ToDoList'\r\nimport '../App/App.css'\r\nimport { ThemesContext } from \"../context\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    let theme = useContext(ThemesContext);\r\n\r\n    \r\n    let [checked, setChecked] = useState(true);\r\n    let handleSwitchCheck = (e) => {\r\n    setChecked(!e.target.checked)\r\n    }\r\n    return (  \r\n        <div className=\"app\"\r\n        style = {checked ? theme.light.AppComponentTheme : theme.dark.AppComponentTheme}>\r\n              <FormControlLabel \r\n        control={<Switch\r\n        onChange={handleSwitchCheck}\r\n                                    />} \r\n        label={checked ? \"Light theme\" : \"Dark Theme\" }/>\r\n            \r\n            <Header />\r\n            <ItemAdder />\r\n            <TodosList />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n  \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}